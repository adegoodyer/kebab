#!/bin/bash
#
# Author:       Ade Goodyer
# Date:         20th Sept 2023
# Description:  recursively change all snake case directories to kebab case
# Example:      an_example_dir -> an-example-dir
#

#!/bin/bash

# Function to convert snake_case to kebab-case
snake_to_kebab() {
  echo "$1" | sed -E 's/([a-z0-9])_+([a-z0-9])/\1-\2/g; s/_/-/g'
}

# Find all directories with snake_case names recursively and store them in an array
directories_to_rename=()
while IFS= read -r -d '' dir; do
  directories_to_rename+=("$dir")
done < <(find . -type d -name '*_*' -print0)

# Check if there are directories to rename
if [ ${#directories_to_rename[@]} -eq 0 ]; then
  echo "No directories with snake_case names found."
  exit 0
fi

# Output directories that will be renamed
echo "Directories that will be renamed:"
for dir in "${directories_to_rename[@]}"; do
  # Get the parent directory and name of the directory
  parent_dir=$(dirname "$dir")
  base_dir=$(basename "$dir")

  # Convert snake_case to kebab-case
  kebab_case=$(snake_to_kebab "$base_dir")

  # Output the old and new directory names
  echo "$dir -> $parent_dir/$kebab_case"
done

# Ask for confirmation
read -p "Do you want to proceed with renaming these directories? (y/n): " confirm
if [ "$confirm" != "y" ] && [ "$confirm" != "Y" ]; then
  echo "Operation canceled."
  exit 0
fi

# Rename the directories
for dir in "${directories_to_rename[@]}"; do
  # Get the parent directory and name of the directory
  parent_dir=$(dirname "$dir")
  base_dir=$(basename "$dir")

  # Convert snake_case to kebab-case
  kebab_case=$(snake_to_kebab "$base_dir")

  # Rename the directory with kebab-case
  mv "$dir" "$parent_dir/$kebab_case"
  echo "Renamed: $dir -> $parent_dir/$kebab_case"
done

echo "Renaming completed."
